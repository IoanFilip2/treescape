% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/metrics.R
\name{multi.dist}
\alias{multi.dist}
\title{Metric function for \code{multiPhylo} input}
\usage{
multi.dist(trees, lambda = 0, type = "number")
}
\arguments{
\item{trees}{an object of the class \code{multiPhylo}}

\item{lambda}{a number in [0,1] which specifies the extent to which topology (default, with lambda=0)  or branch lengths (lambda=1) are emphasised. This argument is ignored if type="function"}

\item{type}{logical which takes the inputs "\code{number}" (default) or "\code{function}". When \code{type="number"}, the output is a matrix where each entry is numeric; when \code{type="function"} the output is a matrix where each entry is a function of lambda}
}
\description{
Comparison of a list of trees using the Kendall Colijn metric. Output is given as a pairwise distance matrix.
}
\examples{
## generate 10 random trees, each with 6 tips
trees <- rmtree(10,6)
## pairwise distance matrix when lambda=0
multi.dist(trees)
## pairwise distance matrix as a function of lambda:
m <- multi.dist(trees, type="function")
## evaluate at lambda=0. Equivalent to multi.dist(trees).
m(0)

## A method to visualise these distances with MDS:
require(ade4)
# find an approximate projection of the points in 2 dimensions:
mMDS <- dudi.pco(as.dist(m(0)), scannf=FALSE,nf=2)
# put the coordinates of these points into a data frame
mdf <- as.data.frame(cbind(mMDS$li[,1],mMDS$li[,2]))
# create plot:
\donttest{require(ggplot2)
mplot <- ggplot(mdf, aes(mMDS$li[,1],mMDS$li[,2]))
require(RColorBrewer)
mpalette <- brewer.pal(10,"Paired") # create colour palette
## plot:
mplot + geom_point(colour=mpalette,size=5) +
  xlab("") + ylab("") + theme_bw(base_family = "") }

## An example using data:
## These woodmice phylogenies were created using the bootstrapping example in package \\code{ape}
data(woodmiceTrees)
\donttest{woodmiceDists <- multi.dist(woodmiceTrees) # find topological distances
woodmiceMDS <- dudi.pco(as.dist(woodmiceDists), scannf=FALSE, nf=2)
woodmicedf <- as.data.frame(cbind(woodmiceMDS$li[,1], woodmiceMDS$li[,2]))
require(ggplot2)
woodmiceplot <- ggplot(woodmicedf, aes(woodmiceMDS$li[,1], woodmiceMDS$li[,2])) # create plot
woodmiceplot + geom_density2d(colour="gray80") + # contour lines
 geom_point(size=6, shape=1, colour="gray50") + # grey edges
 geom_point(size=6, alpha=0.2, colour="navy") + # transparent blue points
 xlab("") + ylab("") + theme_bw(base_family="") # remove axis labels and grey background}

\donttest{require(rgl)
woodmiceMDS3D <- dudi.pco(as.dist(woodmiceDists), scannf=FALSE, nf=3)
plot3d(woodmiceMDS3D$li[,1], woodmiceMDS3D$li[,2], woodmiceMDS3D$li[,3], type="s", size=1.5,
   col="navy", alpha=0.5, xlab="", ylab="", zlab="")}
}
\author{
Michelle Kendall \email{michelle.louise.kendall@gmail.com}
}

