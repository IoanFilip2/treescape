% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/metrics.R
\name{medTree}
\alias{medTree}
\title{Geometric median tree function}
\usage{
medTree(trees, lambda = 0, weights = rep(1, length(trees)),
  return_lambda_function = F, save_memory = F)
}
\arguments{
\item{trees}{An object of the class multiPhylo, containing the trees for which the median tree will be computed.}

\item{lambda}{a number in [0,1] which specifies the extent to which topology (default, with lambda=0)  or branch lengths (lambda=1) are emphasised. This argument is ignored if \code{return_lambda_function=TRUE}.}

\item{weights}{A vector of weights for the trees. Defaults to a vector of 1's so that all trees are equally weighted, but can be used to encode likelihood, posterior probabilities or other characteristics.}

\item{return_lambda_function}{If true, a function that can be invoked with different lambda values is returned.
This function returns the vector of metric values for the given lambda.}

\item{save_memory}{A flag that saves a lot of memory but increases the execution time (not compatible with return_lambda_function=TRUE).}
}
\value{
A list with the median metric vector, distances, indices of the tree(s) that are closest to the median tree and the value of this distance
 or a function that produces this list for a given value of lambda.
}
\description{
Finds the geometric median of a set of trees according to the Kendall Colijn metric.
}
\examples{
## generate 10 random trees, each with 6 tips
trees <- rmtree(10,6)
## Geometric median tree:
mymedian <- medTree(trees)
mymedian$centre # the vector at the 'centre' of the trees; may not correspond to an actual tree
mymedian$median # the identifier(s) of the tree(s) closest to the central vector
mymedian$mindist # the distance of the median tree(s) from the central vector

\dontrun{
## Example with woodmice data:
data(woodmiceTrees)
woodmiceMed <- medTree(woodmiceTrees)$median[[1]]
## plot the (first) geometric median tree (there are seven topologically identical median trees):
plot(woodmiceTrees[[woodmiceMed]],type="cladogram",edge.width=3, cex=0.8)

## finding the geometric median tree from a single cluster:
woodmiceDists <- treescape(woodmiceTrees,nf=2)
wmx <- woodmiceDists$pco$li[,1] # simplifying notation
wmy <- woodmiceDists$pco$li[,2]
## isolate the trees from the largest cluster
wmCluster1 <- woodmiceTrees[intersect(
  intersect(which(wmx>(-2)),which(wmx<2)),
  intersect(which(wmy>(-2.5)),which(wmy<2.5))
  )]
## find the geometric median
geomMedwm1 <- medTree(wmCluster1)$median[[1]]
plot(wmCluster1[[geomMedwm1]],type="cladogram",edge.width=3, cex=0.8)
# this is identical to the overall median tree:
treeDist(woodmiceTrees[[woodmiceMed]],wmCluster1[[geomMedwm1]],1)

## However, median trees from other clusters have different topologies, for example:
## isolate the trees from the second largest cluster:
wmCluster2 <- woodmiceTrees[intersect(
 intersect(which(wmx>(-1)),which(wmx<8)),
 intersect(which(wmy>1),which(wmy<6))
 )]
## find the geometric median
geomMedwm2 <- medTree(wmCluster2)$median[[1]]
plot(wmCluster2[[geomMedwm2]],type="cladogram",edge.width=3, cex=0.8)
## This is another representative summary tree which is different from those we found above:
treeDist(wmCluster1[[geomMedwm1]],wmCluster2[[geomMedwm2]])
}
}
\author{
Jacob Almagro-Garcia \email{nativecoder@gmail.com}

Michelle Kendall \email{michelle.louise.kendall@gmail.com}
}

